// Default css

.clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	
	&:after {
		clear: both;
	}
}

// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

.block() {
	display: block;
}

.absolute() {
	position: absolute;
}

.hide() {
	display: none;
}

.box-shadow(@shadow) {
	-webkit-box-shadow: @shadow;
	box-shadow: @shadow;
}


.transform(@transformations) {
	-webkit-transform: @transformations;
	        transform: @transformations;
}
.scale-rotate(@scale, @rotate) {
	-webkit-transform: scale(@scale), rotate(@rotate);
	        transform: @transformations;
}

.transform-origin(@transformations) {
	-webkit-transform-origin: @transformations;
	        transform-origin: @transformations;
}

.transform-style(@transformations) {
	-webkit-transform-style: @transformations;
	transform-style: @transformations;
}

.animation(@animation) {
	-webkit-animation: @animation;
	        animation: @animation;
}

.animation-duration(@duration) {
	-webkit-animation-duration: @duration;
	        animation-duration: @duration;
}

.animation-delay(@delay) {
	-webkit-animation-delay: @delay;
	        animation-delay: @delay;
}

.animation-name(@name) {
	-webkit-animation-name: @name;
	        animation-name: @name;
}

.animation-timing-function(@function) {
	-webkit-animation-timing-function: @function;
			animation-timing-function: @function;
}

// Flip

.flipH() {
	-webkit-transform: scaleX(-1);
	        transform: scaleX(-1);
	    filter: FlipH;
	-ms-filter: "FlipH";
}

.flipV() {
	-webkit-transform: scaleY(-1);
	        transform: scaleY(-1);
}

.text-shadow(@color, @blur: 2px, @x: 0, @y: 0px ) {
	text-shadow: @x @y @blur @color;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
          transition: @transition;
}

.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
          transition-delay: @transition-delay;
}

.transition-property(@transition-property) {
  -webkit-transition-property: @transition-property;
          transition-property: @transition-property;
}

.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
          transition-duration: @transition-duration;
}

.transition-timing-function(@transition-timing-function) {
  -webkit-transition-timing-function: @transition-timing-function;
          transition-timing-function: @transition-timing-function;
}

.transition-transform(@transition) {
  -webkit-transition: -webkit-transform @transition;
          transition: transform @transition;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
          transform: scale(@ratio);
}
.translate(@x; @y) {
  -webkit-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.skew(@x; @y) {
  -webkit-transform: skew(@x, @y);
          transform: skew(@x, @y);
}
.translate3d(@x; @y; @z) {
  -webkit-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

// Flex 
.align-self-flex-start() {
	-webkit-align-self: flex-start;
        -ms-flex-item-align: start;
       		align-self: flex-start;
    }
.align-content-flex-start() {
	-webkit-align-content: flex-start;
    		-ms-flex-line-pack: start;
    		align-content: flex-start;
    }

// align
.vertical-align() {
	position: relative;
	top: 50%;
	.transform(translateY(-50%));
}

.vertical-align-flex() {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	align-items: center;
}

.horizontal-align(@position: relative) {
	position: @position;
	left: 50%;
	.transform(translateX(-50%));
}

// size
.size(@w:auto, @h:auto) {
	width: @w;
	height: @h;
}

// Rounded 
.rounded(@radius) {
	border-radius: @radius;
}

.rounded-top-left(@radius) {
	border-top-left-radius: @radius;
}

.rounded-top-right(@radius) {
	border-top-right-radius: @radius;
}

.rounded-top(@radius) {
	.rounded-top-left(@radius);
	.rounded-top-right(@radius);
}

.rounded-bottom-left(@radius) {
	border-bottom-left-radius: @radius;
}
.rounded-bottom-right(@radius) {
	border-bottom-right-radius: @radius;
}
.rounded-bottom(@radius) {
	.rounded-bottom-left(@radius);	
    .rounded-bottom-right(@radius);	
}
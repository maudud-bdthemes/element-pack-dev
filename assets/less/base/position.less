// Name:            Position
// Description:     Utilities to position content
//
// Component:       `bdt-position-absolute`
//                  `bdt-position-relative`
//                  `bdt-position-z-index`
//                  `bdt-position-top`
//                  `bdt-position-bottom`
//                  `bdt-position-left`
//                  `bdt-position-right`
//                  `bdt-position-top-left`
//                  `bdt-position-top-center`
//                  `bdt-position-top-right`
//                  `bdt-position-bottom-left`
//                  `bdt-position-bottom-center`
//                  `bdt-position-bottom-right`
//                  `bdt-position-center`
//                  `bdt-position-center-left`
//                  `bdt-position-center-right`
//                  `bdt-position-cover`
//
// Modifiers:       `bdt-position-small`
//                  `bdt-position-medium`
//                  `bdt-position-large`
//
// ========================================================================


// Variables
// ========================================================================

@position-small-margin:                                @global-small-gutter;
@position-medium-margin:                               @global-gutter;
@position-large-margin:                                @global-gutter;
@position-large-margin-l:                              50px;


/* ========================================================================
   Component: Position
 ========================================================================== */

:root { --bdt-position-margin-offset: 0.0001px; }


/* Directions
 ========================================================================== */

/*
 * 1. Prevent content overflow.
 */

[class*='bdt-position-top'],
[class*='bdt-position-bottom'],
[class*='bdt-position-left'],
[class*='bdt-position-right'],
[class*='bdt-position-center'] {
    position: absolute !important;
    /* 1 */
    max-width: ~'calc(100% - (var(--bdt-position-margin-offset) * 2))';
    box-sizing: border-box;
}

/*
 * Edges
 * Don't use `width: 100%` because it's wrong if the parent has padding.
 */

.bdt-position-top {
    top: 0;
    left: 0;
    right: 0;
}

.bdt-position-bottom {
    bottom: 0;
    left: 0;
    right: 0;
}

.bdt-position-left {
    top: 0;
    bottom: 0;
    left: 0;
}

.bdt-position-right {
    top: 0;
    bottom: 0;
    right: 0;
}

/*
 * Corners
 */

.bdt-position-top-left {
    top: 0;
    left: 0;
}

.bdt-position-top-right {
    top: 0;
    right: 0;
}

.bdt-position-bottom-left {
    bottom: 0;
    left: 0;
}

.bdt-position-bottom-right {
    bottom: 0;
    right: 0;
}

/*
 * Center
 * 1. Fix text wrapping if content is larger than 50% of the container.
 *    Using `max-content` requires `max-width` of 100% which is set generally.
 */

.bdt-position-center {
    top: ~'calc(50% - var(--bdt-position-margin-offset))';
    left: ~'calc(50% - var(--bdt-position-margin-offset))';
    --bdt-position-translate-x: -50%;
    --bdt-position-translate-y: -50%;
    transform: translate(var(--bdt-position-translate-x), var(--bdt-position-translate-y));
    /* 1 */
    width: max-content;
}

/* Vertical */
[class*='bdt-position-center-left'],
[class*='bdt-position-center-right'] {
    top: ~'calc(50% - var(--bdt-position-margin-offset))';
    --bdt-position-translate-y: -50%;
    transform: translate(0, var(--bdt-position-translate-y));
}

.bdt-position-center-left { left: 0; }
.bdt-position-center-right { right: 0; }

.bdt-position-center-left-out {
    right: 100%;
    width: max-content;
}

.bdt-position-center-right-out {
    left: 100%;
    width: max-content;
}

/* Horizontal */
.bdt-position-top-center,
.bdt-position-bottom-center {
    left: ~'calc(50% - var(--bdt-position-margin-offset))';
    --bdt-position-translate-x: -50%;
    transform: translate(var(--bdt-position-translate-x), 0);
    /* 1 */
    width: max-content;
}

.bdt-position-top-center { top: 0; }
.bdt-position-bottom-center { bottom: 0; }

/*
 * Cover
 */

.bdt-position-cover {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}


/* Margin
 ========================================================================== */

.bdt-position-small {
    margin: @position-small-margin;
    --bdt-position-margin-offset: @position-small-margin;
}

.bdt-position-medium {
    margin: @position-medium-margin;
    --bdt-position-margin-offset: @position-medium-margin;
}

.bdt-position-large {
    margin: @position-large-margin;
    --bdt-position-margin-offset: @position-large-margin;
}

/* Desktop and bigger */
@media (min-width: @breakpoint-large) {

    .bdt-position-large {
        margin: @position-large-margin-l;
        --bdt-position-margin-offset: @position-large-margin-l;
    }

}


/* Schemes
 ========================================================================== */

.bdt-position-relative { position: relative  !important; }
.bdt-position-absolute { position: absolute  !important; }
.bdt-position-fixed { position: fixed  !important; }
.bdt-position-sticky { position: sticky  !important; }


/* Layer
 ========================================================================== */

.bdt-position-z-index { z-index: 1; }
.bdt-position-z-index-zero { z-index: 0; }
.bdt-position-z-index-negative { z-index: -1; }
.bdt-position-z-index-high { z-index: @global-z-index - 10; }


// Hooks
// ========================================================================

.hook-position-misc();

.hook-position-misc() {}
